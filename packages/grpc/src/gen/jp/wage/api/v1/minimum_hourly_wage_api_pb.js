// source: jp/wage/api/v1/minimum_hourly_wage_api.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

var google_type_date_pb = require('../../../../google/type/date_pb.js');
goog.object.extend(proto, google_type_date_pb);
var jp_wage_api_v1_minimum_hourly_wage_view_pb = require('../../../../jp/wage/api/v1/minimum_hourly_wage_view_pb.js');
goog.object.extend(proto, jp_wage_api_v1_minimum_hourly_wage_view_pb);
goog.exportSymbol('proto.jp.wage.api.v1.ListViewsRequest', null, global);
goog.exportSymbol('proto.jp.wage.api.v1.ListViewsResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.jp.wage.api.v1.ListViewsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.jp.wage.api.v1.ListViewsRequest.repeatedFields_, null);
};
goog.inherits(proto.jp.wage.api.v1.ListViewsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.jp.wage.api.v1.ListViewsRequest.displayName = 'proto.jp.wage.api.v1.ListViewsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.jp.wage.api.v1.ListViewsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.jp.wage.api.v1.ListViewsResponse.repeatedFields_, null);
};
goog.inherits(proto.jp.wage.api.v1.ListViewsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.jp.wage.api.v1.ListViewsResponse.displayName = 'proto.jp.wage.api.v1.ListViewsResponse';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.jp.wage.api.v1.ListViewsRequest.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.jp.wage.api.v1.ListViewsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.jp.wage.api.v1.ListViewsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.jp.wage.api.v1.ListViewsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.jp.wage.api.v1.ListViewsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    date: (f = msg.getDate()) && google_type_date_pb.Date.toObject(includeInstance, f),
    prefectureCodesList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.jp.wage.api.v1.ListViewsRequest}
 */
proto.jp.wage.api.v1.ListViewsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.jp.wage.api.v1.ListViewsRequest;
  return proto.jp.wage.api.v1.ListViewsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.jp.wage.api.v1.ListViewsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.jp.wage.api.v1.ListViewsRequest}
 */
proto.jp.wage.api.v1.ListViewsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_type_date_pb.Date;
      reader.readMessage(value,google_type_date_pb.Date.deserializeBinaryFromReader);
      msg.setDate(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addPrefectureCodes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.jp.wage.api.v1.ListViewsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.jp.wage.api.v1.ListViewsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.jp.wage.api.v1.ListViewsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.jp.wage.api.v1.ListViewsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDate();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_type_date_pb.Date.serializeBinaryToWriter
    );
  }
  f = message.getPrefectureCodesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
};


/**
 * optional google.type.Date date = 1;
 * @return {?proto.google.type.Date}
 */
proto.jp.wage.api.v1.ListViewsRequest.prototype.getDate = function() {
  return /** @type{?proto.google.type.Date} */ (
    jspb.Message.getWrapperField(this, google_type_date_pb.Date, 1));
};


/**
 * @param {?proto.google.type.Date|undefined} value
 * @return {!proto.jp.wage.api.v1.ListViewsRequest} returns this
*/
proto.jp.wage.api.v1.ListViewsRequest.prototype.setDate = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.jp.wage.api.v1.ListViewsRequest} returns this
 */
proto.jp.wage.api.v1.ListViewsRequest.prototype.clearDate = function() {
  return this.setDate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.jp.wage.api.v1.ListViewsRequest.prototype.hasDate = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated string prefecture_codes = 2;
 * @return {!Array<string>}
 */
proto.jp.wage.api.v1.ListViewsRequest.prototype.getPrefectureCodesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.jp.wage.api.v1.ListViewsRequest} returns this
 */
proto.jp.wage.api.v1.ListViewsRequest.prototype.setPrefectureCodesList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.jp.wage.api.v1.ListViewsRequest} returns this
 */
proto.jp.wage.api.v1.ListViewsRequest.prototype.addPrefectureCodes = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.jp.wage.api.v1.ListViewsRequest} returns this
 */
proto.jp.wage.api.v1.ListViewsRequest.prototype.clearPrefectureCodesList = function() {
  return this.setPrefectureCodesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.jp.wage.api.v1.ListViewsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.jp.wage.api.v1.ListViewsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.jp.wage.api.v1.ListViewsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.jp.wage.api.v1.ListViewsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.jp.wage.api.v1.ListViewsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    viewsList: jspb.Message.toObjectList(msg.getViewsList(),
    jp_wage_api_v1_minimum_hourly_wage_view_pb.MinimumHourlyWageView.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.jp.wage.api.v1.ListViewsResponse}
 */
proto.jp.wage.api.v1.ListViewsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.jp.wage.api.v1.ListViewsResponse;
  return proto.jp.wage.api.v1.ListViewsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.jp.wage.api.v1.ListViewsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.jp.wage.api.v1.ListViewsResponse}
 */
proto.jp.wage.api.v1.ListViewsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new jp_wage_api_v1_minimum_hourly_wage_view_pb.MinimumHourlyWageView;
      reader.readMessage(value,jp_wage_api_v1_minimum_hourly_wage_view_pb.MinimumHourlyWageView.deserializeBinaryFromReader);
      msg.addViews(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.jp.wage.api.v1.ListViewsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.jp.wage.api.v1.ListViewsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.jp.wage.api.v1.ListViewsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.jp.wage.api.v1.ListViewsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getViewsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      jp_wage_api_v1_minimum_hourly_wage_view_pb.MinimumHourlyWageView.serializeBinaryToWriter
    );
  }
};


/**
 * repeated MinimumHourlyWageView views = 1;
 * @return {!Array<!proto.jp.wage.api.v1.MinimumHourlyWageView>}
 */
proto.jp.wage.api.v1.ListViewsResponse.prototype.getViewsList = function() {
  return /** @type{!Array<!proto.jp.wage.api.v1.MinimumHourlyWageView>} */ (
    jspb.Message.getRepeatedWrapperField(this, jp_wage_api_v1_minimum_hourly_wage_view_pb.MinimumHourlyWageView, 1));
};


/**
 * @param {!Array<!proto.jp.wage.api.v1.MinimumHourlyWageView>} value
 * @return {!proto.jp.wage.api.v1.ListViewsResponse} returns this
*/
proto.jp.wage.api.v1.ListViewsResponse.prototype.setViewsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.jp.wage.api.v1.MinimumHourlyWageView=} opt_value
 * @param {number=} opt_index
 * @return {!proto.jp.wage.api.v1.MinimumHourlyWageView}
 */
proto.jp.wage.api.v1.ListViewsResponse.prototype.addViews = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.jp.wage.api.v1.MinimumHourlyWageView, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.jp.wage.api.v1.ListViewsResponse} returns this
 */
proto.jp.wage.api.v1.ListViewsResponse.prototype.clearViewsList = function() {
  return this.setViewsList([]);
};


goog.object.extend(exports, proto.jp.wage.api.v1);
